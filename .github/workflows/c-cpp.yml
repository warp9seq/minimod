name: C/C++ CI

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]

jobs:
  ubuntu_14:
    name: Ubuntu 14
    runs-on: ubuntu-22.04
    container: ubuntu:14.04
    steps:
      - uses: actions/checkout@v2
      - name: install packages
        run: sudo apt-get update && sudo apt-get install -y zlib1g-dev gcc g++ autoconf automake make wget curl
      - name: install htslib
        run: ./scripts/install-hts.sh
      - name: test
        run: make test
  ubuntu_16:
    name: Ubuntu 16
    runs-on: ubuntu-22.04
    container: ubuntu:16.04
    steps:
      - uses: actions/checkout@v2
      - name: install packages
        run: apt-get update && apt-get install -y zlib1g-dev gcc g++ autoconf automake make wget curl bzip2
      - name: install htslib
        run: ./scripts/install-hts.sh
      - name: test
        run: make test
  ubuntu_18:
    name: Ubuntu 18
    runs-on: ubuntu-22.04
    container: ubuntu:18.04
    steps:
      - uses: actions/checkout@v2
      - name: Install sudo package
        run: apt update && apt install sudo
      - name: install packages
        run: sudo apt-get update && sudo apt-get install -y zlib1g-dev gcc g++ autoconf automake make wget curl
      - name: install htslib
        run: ./scripts/install-hts.sh
      - name: test
        run: make test
  ubuntu_20:
    name: Ubuntu 20
    runs-on: ubuntu-22.04
    container: ubuntu:20.04
    steps:
    - uses: actions/checkout@v2
    - name: Install sudo package
      run: apt update && apt install sudo
    - name: install packages
      run: sudo apt-get update && sudo apt-get install -y zlib1g-dev gcc g++ autoconf automake make wget curl
    - name: install htslib
      run: ./scripts/install-hts.sh
    - name: test
      run: make test
  ubuntu_22:
      name: Ubuntu 22
      runs-on: ubuntu-22.04
      steps:
      - uses: actions/checkout@v2
      - name: install packages
        run: sudo apt-get update && sudo apt-get install -y zlib1g-dev gcc g++ autoconf automake make wget curl
      - name: install htslib
        run: ./scripts/install-hts.sh
      - name: test
        run: make test
      - name: install valgrind
        run: sudo apt-get install -y valgrind
      - name: memtest
        run: make memtest
  ubuntu_20_icc:
    name: Ubuntu 20 icc
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Intel Apt repository
      timeout-minutes: 1
      run: |
        wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
        sudo apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
        rm GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
        echo "deb https://apt.repos.intel.com/oneapi all main" | sudo tee /etc/apt/sources.list.d/oneAPI.list
        sudo apt-get update
    - name: install packages
      run: sudo apt-get install -y zlib1g-dev libzstd-dev intel-oneapi-compiler-dpcpp-cpp-and-cpp-classic
    - name: install htslib
      run: ./scripts/install-hts.sh
    - name: Setup Intel oneAPI environment
      run: |
        source /opt/intel/oneapi/setvars.sh
        printenv >> $GITHUB_ENV
    - name: build
      run: make CC=icc -j8
    - name: test
      run: make test
  os_x_11:
    name: OSX 11
    runs-on: macos-11
    steps:
    - uses: actions/checkout@v2
    - name: install htslib
      run: ./scripts/install-hts.sh
    - name: build
      run: make -j8
    - name: test
      run: make test
  arm64:
    name: ubuntu arm
    runs-on: ubuntu-latest
    steps:
    - run: docker run --rm --privileged multiarch/qemu-user-static:register --reset
    - uses: docker://multiarch/ubuntu-core:arm64-bionic
      with:
        args: 'uname -a'
    - uses: actions/checkout@v1
    - uses: docker://multiarch/ubuntu-core:arm64-bionic
      with:
        args: >
          bash -c "apt-get update &&
          apt-get install -y zlib1g-dev gcc make wget curl &&
          ldd --version && gcc --version &&
          ./scripts/install-hts.sh && make && make test"